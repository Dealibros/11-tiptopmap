import { css, Global } from '@emotion/react';
import axios from 'axios';
import { GetServerSidePropsContext } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import Image from 'next/image';
import React, { useCallback, useEffect, useRef, useState } from 'react';
import Layout from '../../components/Layout';
import Map from '../../components/onlyMap';
import onlyMap from '../../components/onlyMap';

const title = css`
  font-family: 'New Tegomin';
  margin-top: 1rem;
  color: black;
  font-weight: 700;
  font-size: 4.6rem;
  text-align: center;
  margin-bottom: 0;
`;

const secondMain = css`
  display: flex;
  width: 100%;
  height: 90vh;
  margin-right: 0 auto;
  margin-left: 0 auto;
  text-align: center;
  justify-content: center;
`;

const searchResult = css`
  /* display: flex;
  position: relative;
  margin: 6px 0 0 0;
  padding: 10px 0 0 0;
  border-bottom: 1px, solid lightgray;
  opacity: 1;
  cursor: pointer; */

  :hover {
    opacity: 0.8;
  }
`;

const divforImg = css`
  display: flex;
  position: relative;
  height: 165px;
  width: 200px;
  justify-content: center;
  margin-right: auto;
  margin-left: auto;
  /* margin-left:20rem; */
  /* margin-top: auto;
  margin-bottom: auto;

  /* flex-shrink: 0; */
`;

const column = css`
  text-align: center;
  /* margin: 0 1rem 0 1rem; */
  /* display: flex;
  flex-direction: colum; */
`;

const rateButton = css`
  text-align: center;
  font-weight: 400;
  font-size: 14px;
  border: 1px solid rgb(176, 176, 176);
  background-color: rgb(255, 255, 255);
  outline: none;
  margin: 0px;
  line-height: 18px;
  padding: 6px 16px;
  border-radius: 17px;
  margin: 0 0.7rem 0 0.7rem;
  cursor: pointer;
`;

const img = css`
  border-radius: 10px;
  overflow: hidden;
`;
/* :hover {
    color: black;
    background-color: lightgray;
  } */

/* padding: 0 1rem 0 1rem; */

const infoCard = css`
  height: 60vh;
  text-align: center;
  width: 50vw;
  background-color: beige;
  border-radius: 0.9rem;
  /* overflow: auto; */
  /* width: 9.3rem;
  display: flex; *6
  /* flex-direction: column; */
  /* flex-grow */
  /* padding-top: 1.4rem; */
  /* padding-left: 1.4rem; */
`;

const titleCard = css`
  text-align: center;
  /* margin: 0 0 0.4rem 0;

  /* margin: 1rem 1.2rem 1rem 1.2rem; */
`;

// to change the staricon and price to the bottom take out the flex-column
const searchResultInfo = css`
  background-color: beige;
  position: relative;
  margin-right: 0 auto;
  margin-left: 0 auto;
  text-align: center;
  /* width: 23vw; */
  /* display: flex;
  direction: column;
  justify-content: space-between; */
`;

const searchResultInfoTop = css`
  margin-right: 0 auto;
  margin-left: 0 auto;
  text-align: center;
  /* p {
    margin: 0 0 0 0.9rem;
    padding-bottom: 0.1rem;
    padding-top: 0;
    font-weight: 300;
    font-size: 13px;
    color: gray;
  }
  h3 {
    font-size: 1.3rem;
    margin: 0 0 0 0.9rem;
    font-weight: 300;
  }
  h5,
  h6 {
    font-size: 0.7rem;
    margin: 0 0 0 0.9rem;
    padding: 0;
  } */
`;

const space = css`
  border-top: 1px dashed lightgray;
  margin: 0.3rem;
  padding: 0;
`;

const searchResultStars = css`
  /* display: flex;
  align-items: center; */
  /* font-size: 0.5rem; */
`;
const searchResultPrice = css`
  /* font-size: 0.5rem;
  text-align: right; */
`;

const description = css`
  color: gray;
`;

const rating = css`
  /* font-size: 1.3rem;
  font-weight: 600; */
`;

const price = css`
  /* font-size: 0.7rem !important;
  font-weight: 600; */
`;

const lineInfoCard = css`
  margin-bottom: 0;
`;
export default function Card(props) {
  // console.log('firstmaprestaurants', props.restaurants);
  return (
    <div>
      <Head>
        <title>TopTip Map</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <Layout username={props.username}>
        <p css={title}>TopTip Map</p>

        <main css={secondMain}>
          <div css={infoCard}>
            {' '}
            <div css={searchResultInfo}>
              <h1 css={titleCard}> Restaurants </h1>

              <div css={divforImg}>
                {' '}
                <Image
                  css={img}
                  className="images"
                  heigh="150px"
                  width="150px"
                  src={props.restaurant[0].photo}
                  alt="restaurant-place"
                  layout="fill"
                />
                {/* <Image src="/../public/pizza2.jpg" layout="fill" objectFit="cover" /> */}
              </div>
              <h3>{props.restaurant[0].restaurantname}</h3>
              <p>{props.restaurant[0].addressplace}</p>
              <h5>{props.restaurant[0].website}</h5>
              <hr css={space} />
              <p css={description}>{props.restaurant[0].descriptionplace}</p>

              <h3 css={searchResultStars}>
                <span>‚≠ê</span>
              </h3>
              <h3 css={searchResultPrice}>
                <p css={price}>
                  <br />
                  {props.restaurant[0].price}
                </p>
              </h3>
            </div>
            <hr css={lineInfoCard} />
          </div>
        </main>
      </Layout>
      {/* <onlyMap extra={extra} /> */}
    </div>
  );
}

export async function getServerSideProps(context) {
  const { getValidSessionByToken } = await import('../../util/database');
  const sessionToken = context.req.cookies.sessionToken;
  const session = await getValidSessionByToken(sessionToken);
  // console.log(session);
  if (!session) {
    // Redirect the user when they have a session
    // token by returning an object with the `redirect` prop
    // https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering

    return {
      redirect: {
        destination: '/login?returnTo=/map',
        permanent: false,
      },
    };
  }

  const { getRestaurant } = await import('../../util/database');
  const restaurant = await getRestaurant(context.query.mapId);
  console.log('context.query', context.query.mapId);
  // console.log('aha', restaurant);
  return {
    props: {
      restaurant,
    },
  };
}

//   const { getRestaurantsData } = await import('../../util/database');
//   const restaurants = await getRestaurantsData();
//   console.log('aha', restaurants);
//   return {
//     props: {
//       restaurants,
//     },
//   };
// }

// Why is this one not working????
//   const { getRestaurant } = await import('../../util/database');

//   const restaurant = await getRestaurant(context.query.restaurantname);
//   console.log('singlePage', restaurant);
//   return {
//     props: {
//       restaurant,
//     },
//   };
// }
