import { css } from '@emotion/react';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';
import InfoCard from '../../components/InfoCard.js';
import Layout from '../../components/Layout';

const title = css`
  font-family: 'New Tegomin';
  margin-top: 1rem;
  color: black;
  font-weight: 700;
  font-size: 4.6rem;
  text-align: center;
  margin-bottom: 0;
`;

const secondMain = css`
  display: flex;
  width: 100%;
`;

const leftMain = css`
  font-family: 'New Tegomin';
  width: 40vw;
  padding: 0 0 0 20px;
  margin: 0 0 0 30px;
`;

const rightMain = css`
  object-fit: contain;
  width: 56.9vw;
  text-align: right;
  padding: 0.8rem;
`;

const mapDiv = css`
  width: 50vw;
  object-fit: contain;
`;

const infoCard = css`
  height: 60vh;
  overflow-x: hidden !important;
`;

const titleCard = css`
  margin: 0 0 1rem 0;
  text-align: center;
`;

const a = css`
  :link {
    color: green;
  }
`;

export default function Home(props) {
  const [updateList, setUpdateList] = useState(props.restaurants);

  const Map = dynamic(() => import('../../components/onlyMap'), {
    ssr: false,
    isloading: 'Loading',
  });

  function fetchList() {
    const refreshList = async () => {
      const response = await fetch('/api/updatelist');
      const newList = await response.json();

      console.log('are you working updatedList?', newList);
      setUpdateList(newList);

      if ('errors' in newList) {
        console.log(newList.errors);
        return newList;
      }
    };
    refreshList();
  }
  // Maybe in Geocode
  // console.log('list?', updateList);
  // const city = updateList[0].addressplace;
  // const theCity = city.split(' ').slice(-2)[0];
  // const theRealCity = theCity.slice(0, -1);

  // console.log(city);
  // console.log(theCity);

  return (
    <div>
      <Head>
        <title>TopTip Map</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <Layout username={props.username}>
        <p css={title}>TopTip Map</p>

        <main css={secondMain}>
          <section css={leftMain}>
            <h1 css={titleCard}> Your favourite Spots </h1>
            <div css={infoCard}>
              {updateList.map((restaurant) => {
                return (
                  <div key={restaurant.id}>
                    <Link href={`/map/${restaurant.id}`}>
                      <a css={a}>
                        <InfoCard
                          key={restaurant.id}
                          restaurants={restaurant}
                        />
                      </a>
                    </Link>
                  </div>
                );
              })}
            </div>
          </section>
          <section css={rightMain}>
            <Map
              fetchList={fetchList}
              updateList={updateList}
              coordinates={props.coordinates}
              restaurants={props.restaurants}
              css={mapDiv}
            />
          </section>
        </main>
      </Layout>
    </div>
  );
}

export async function getServerSideProps(context) {
  const { getValidSessionByToken } = await import('../../util/database');
  const sessionToken = context.req.cookies.sessionToken;
  const session = await getValidSessionByToken(sessionToken);
  // console.log(session);
  if (!session) {
    // Redirect the user when they have a session
    // token by returning an object with the `redirect` prop
    // https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering

    return {
      redirect: {
        destination: '/login?returnTo=/map',
        permanent: false,
      },
    };
  }

  const { getRestaurantsData } = await import('../../util/database');
  const restaurants = await getRestaurantsData();

  return {
    props: {
      restaurants,
    },
  };
}
