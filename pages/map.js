import { css, Global } from '@emotion/react';
import axios from 'axios';
import { GetServerSidePropsContext } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import React, { useCallback, useEffect, useRef, useState } from 'react';
import Layout from '../components/Layout';
import Map from '../components/onlyMap';
import onlyMap from '../components/onlyMap';
import Search from '../components/onlyMap';
import SearchForm from '../components/searchForm';

// import { myGlobalStyles } from '../styles/myGlobalStyles';

// const main = css`
//   margin-top: 0;
//   /* padding-top: 5rem; */
//   width: 100vw;
//   height: 90vh;
//   background-image: url('../images/portada1.jpg');
//   background-size: cover;
//   position: relative;
// `;

const title = css`
  font-family: 'New Tegomin';
  margin-top: 1rem;
  color: black;
  font-weight: 700;
  font-size: 4.6rem;
  text-align: center;
  margin-bottom: 0;
`;

// const portadaStyle = css`
//   min-height: 70vh;
//   height: 5rem;
//   width: 10rem;
// `;
// const isMounted = RenderCompleted();

const mainDiv = css`
  display: flex;
  height: 71vh;
`;
const rightDivMap = css`
  width: 60vw;
`;
const leftDiv = css`
  width: 700px;
`;
// const map = css`
// width:1000px;
// height:600px;
// `

export default function Home(props, { data }) {
  console.log('datta', data);
  const Map = dynamic(() => import('../components/onlyMap'), {
    ssr: false,
    isloading: 'Loading',
  });
  const [points, setPoints] = useState();

  return (
    <div>
      <Head>
        <title>TopTip Map</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>

      <Layout username={props.username}>
        <p css={title}>TopTip Map</p>
        <div css={mainDiv}>
          <div css={leftDiv} />
          <div css={rightDivMap}>
            <Map />
          </div>
        </div>
        {/*
          <SearchForm action="/search" />

          { data.status === 'OK' && (
            <div className="list">
              { data.candidates.map((place, i) => (
                <map place={place} key={place.place_id} />
              )) }
            </div>
          )}

          { data.status === 'ZERO_RESULTS' && (
            <h2 class="text-2xl font-bold text-center">No Place found, please try refine your search query</h2>
          )}
           </div>
      </div> */}
      </Layout>
    </div>
  );
}

export async function getServerSideProps(context) {
  const url =
    'https://maps.googleapis.com/maps/api/place/details/json?place_id=ChIJ2UVakgkHbUcRxiTYHJlZiPA&fields=name%2Crating%2Cformatted_address%2Ctypes%2Cphoto&key=AIzaSyAWCz-geuuBdQaGkXM9OnFdvW0e9jIfwYM&';

  const res = await fetch(url);
  const resJson = await res.json();
  const data = {
    status: resJson.status,
    result: resJson.result,
    // candidates: resJson.candidates,
    // let image = '';

    // if ('photos' in item)
    //   image = `https://maps.googleapis.com/maps/api/place/photo?key=AIzaSyAWCz-geuuBdQaGkXM9OnFdvW0e9jIfwYM&maxwidth=400&photoreference=${item.photos[0].photo_reference}`
    // }

    // return {
    //   formatted_address: item.formatted_address,
    //   name: item.name,
    //   place_id: item.place_id,
    //   types: item.types,
    //   image: image,
  };

  const { getValidSessionByToken } = await import('../util/database');

  const sessionToken = context.req.cookies.sessionToken;

  const session = await getValidSessionByToken(sessionToken);

  console.log(session);

  if (!session) {
    // Redirect the user when they have a session
    // token by returning an object with the `redirect` prop
    // https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering
    return {
      redirect: {
        destination: '/login?returnTo=/map',
        permanent: false,
      },
    };
  }

  return {
    props: {
      data,
    },
  };
}
