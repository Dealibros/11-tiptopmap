import { css, Global } from '@emotion/react';
import axios from 'axios';
import { GetServerSidePropsContext } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import Image from 'next/image';
import React, { useCallback, useEffect, useRef, useState } from 'react';
import Layout from '../components/Layout';
import Map from '../components/onlyMap';
import onlyMap from '../components/onlyMap';

const title = css`
  font-family: 'New Tegomin';
  margin-top: 1rem;
  color: black;
  font-weight: 700;
  font-size: 4.6rem;
  text-align: center;
  margin-bottom: 0;
`;

const secondMain = css`
  display: flex;
  width: 100%;
`;

const leftMain = css`
  font-family: 'New Tegomin';
  width: 35vw;
  padding: 0 0 0 20px;
  margin: 0 0 0 30px;
`;

const rightMain = css`
  object-fit: contain;
  width: 60vw;
  text-align: right;
  padding: 0.8rem;
`;

const mapDiv = css`
  width: 50vw;
  object-fit: contain;
`;

const searchResult = css`
  display: flex;
  position: relative;
  margin: 10px 0 0 0;
  padding: 10px 0 0 0;
  border-bottom: 1px, solid lightgray;
  opacity: 1;
  cursor: pointer;

  :hover {
    opacity: 0.8;
  }

  img {
    border-radius: 10px;
    overflow: hidden;
  }
`;

const divforImg = css`
  position: relative;
  height: 150px;
  width: 200px;
  /* flex-shrink: 0; */
`;

const column = css`
  text-align: center;
  /* margin: 0 1rem 0 1rem; */
  /* display: flex;
  flex-direction: colum; */
`;

const rateButton = css`
  text-align: center;
  font-weight: 400;
  font-size: 14px;
  border: 1px solid rgb(176, 176, 176);
  background-color: rgb(255, 255, 255);
  outline: none;
  margin: 0px;
  line-height: 18px;
  padding: 6px 16px;
  border-radius: 17px;
  margin: 0 0.7rem 0 0.7rem;
  cursor: pointer;

  /* :hover {
    color: black;
    background-color: lightgray;
  } */

  /* padding: 0 1rem 0 1rem; */
`;

const infoCard = css`
  height: 60vh;
  overflow: auto;
  /* width: 9.3rem;
  display: flex; *6
  /* flex-direction: column; */
  /* flex-grow */
  /* padding-top: 1.4rem; */
  /* padding-left: 1.4rem; */
`;

const titleCard = css`
  margin: 0 0 0.4rem 0;
  text-align: center;
  /* margin: 1rem 1.2rem 1rem 1.2rem; */
`;

const searchResultInfoTop = css`
  width: 17vw;
  p {
    margin: 0 0 0 0.9rem;
    padding-bottom: 0.1rem;
    padding-top: 0;
    font-weight: 300;
    font-size: 13px;
    color: gray;
  }
  h3 {
    font-size: 1.3rem;
    margin: 0 0 0 0.9rem;
    font-weight: 300;
  }
  h5 {
    font-size: 0.7rem;
    margin: 0 0 0 0.9rem;
    padding: 0;
  }
`;

const searchResultInfoBottom = css`
  display: flex;
  justify-content: space-between;
  margin-top: 0.8rem;
  p {
    margin: 0 0 0 0;
    font-size: 0.6rem;
  }
  h3 {
    margin: 0 0 0 0.7rem;
    font-size: 0.5rem;
    span {
      margin: 0 0 0 0;
      font-size: 0.5rem;
    }
  }
  h2 {
    /* padding-bottom: 0.4rem; */
  }
`;

const space = css`
  border-top: 1px dashed lightgray;
  margin: 0.3rem;
  padding: 0;
`;

// to change the staricon and price to the bottom take out the flex-column
const searchResultInfo = css`
  /* display: flex;
  direction: column;
  justify-content: space-between; */
`;

const searchResultStars = css`
  /* display: flex;
  align-items: center; */
  font-size: 0.5rem;
`;
const searchResultPrice = css`
  font-size: 0.5rem;
  text-align: right;
`;

const description = css`
  color: gray;
`;

export default function Home(props, { restaurants }) {
  console.log('eyyy', props.restaurants);
  const Map = dynamic(() => import('../components/onlyMap'), {
    ssr: false,
    isloading: 'Loading',
  });
  return (
    <div>
      <Head>
        <title>TopTip Map</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <Layout username={props.username}>
        <p css={title}>TopTip Map</p>
        <main css={secondMain}>
          <section css={leftMain}>
            <h1 css={titleCard}> Restaurants </h1>
            <div css={column}>
              <button css={rateButton}>Rating</button>
              <button css={rateButton}>Type of Place</button>
              <button css={rateButton}>Price</button>
            </div>
            <div css={infoCard}>
              {props.restaurants?.map((restaurant, id) => (
                <InfoCard key={restaurant.id} restaurants={restaurant} />
              ))}
              {/* // css={leftDiv}
                // key={img}
                // img={img}
                // location={location}
                // title={title}
                // description={description}
                // star={star}
                // priceRange={priceRange}
               */}
            </div>
          </section>
          <section css={rightMain}>
            <Map css={mapDiv} />
          </section>
        </main>
      </Layout>
      {/* <onlyMap extra={extra} /> */}
    </div>
  );
}

export function InfoCard(props, { restaurants }) {
  console.log(props.restaurants);
  return (
    <div>
      <div css={searchResult}>
        <div css={divforImg}>
          <Image src="/../public/pizza2.jpg" layout="fill" objectFit="cover" />
        </div>
        {/* <HeartIcon /> */}

        <div css={searchResultInfo}>
          <div css={searchResultInfoTop}>
            <h3>{props.restaurants.restaurantname}</h3>
            <p>{props.restaurants.addressplace}</p>
            <h5>{props.restaurants.website}</h5>
            <hr css={space} />
            <p css={description}>{props.restaurants.descriptionplace}</p>
          </div>

          <div css={searchResultInfoBottom}>
            <h3 css={searchResultStars}>
              <span>‚≠ê</span>
              <p>
                <strong>{props.restaurants.rating}</strong>
              </p>
            </h3>
            <h3 css={searchResultPrice}>
              <p>{props.restaurants.price}</p>
            </h3>
          </div>
        </div>
      </div>
      <hr />
    </div>
  );
}

export async function getServerSideProps(context) {
  const { getValidSessionByToken } = await import('../util/database');
  const sessionToken = context.req.cookies.sessionToken;
  const session = await getValidSessionByToken(sessionToken);
  console.log(session);
  if (!session) {
    // Redirect the user when they have a session
    // token by returning an object with the `redirect` prop
    // https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering
    return {
      redirect: {
        destination: '/login?returnTo=/map',
        permanent: false,
      },
    };
  }

  // await fetch('http://localhost:3000/map', {
  //   method: 'GET',
  //   headers: {
  //     // This forwards the cookie to the API route
  //     cookie: context.req.headers.cookie || '',
  //   },
  // });
  // console.log(context.req.headers.cookie);

  const { getRestaurants } = await import('../util/database');
  const restaurants = await getRestaurants();
  console.log('aha', restaurants);
  return {
    props: {
      restaurants,
    },
  };
}

//  return {
//    props: {},
//  };
// const valueIdPlace = extra;
// const url =
//   'https://maps.googleapis.com/maps/api/place/details/json?place_id=ChIJc-yoiAcHbUcR3YoJUXXn4B4&fields=name%2Crating%2Cformatted_address%2Ctypes%2Cphoto&key=AIzaSyAWCz-geuuBdQaGkXM9OnFdvW0e9jIfwYM&';

// const res = await fetch(url);
// const resJson = await res.json();
// const data = {
//   status: resJson.status,
//   result: resJson.result,

// if ('photos' in item)
//   image = `https://maps.googleapis.com/maps/api/place/photo?key=AIzaSyAWCz-geuuBdQaGkXM9OnFdvW0e9jIfwYM&maxwidth=400&photoreference=${item.photos[0].photo_reference}`
// }

// return {
//   formatted_address: item.formatted_address,
//   name: item.name,
//   place_id: item.place_id,
//   types: item.types,
//   image: image,

//     return {
//     props: {
//       data,
//     },
//   };
// }
//   };
